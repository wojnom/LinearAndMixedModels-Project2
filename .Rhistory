xlab = "Days", ylab = "Reaction", pch = 19,
panel = lattice.getOption("panel.xyplot"), col = "blue3")
model <- lmer(Reaction ~ Days + (Days|Subject))
summary(model)
model
model <- lmer(Reaction ~ Days + (Days|Subject))
summary(model)
model
model$coef
model@coef
model@coefficient
str(model)
model
summary(model)
N <- 1000
df <- sleepstudy
df <- sleepstudy
logs <- replicate(N, {
df$Subject <- sample(df$Subject)
logLik(lmer(Reaction ~ Days + (Days|Subject), data = df))
})
sum(logs > logLik(model))/N
logLik(model)
anova(model, model1)
model1 <- lmer(Reaction ~ Days)
anova(model, model1)
model1 <- lm(Reaction ~ Days)
anova(model, model1)
ranEf <- ranef(model, postVar = TRUE)
qqmath(ranEf)
model
summary(model)
model
2 * pnorm(6.77, lower.tail = FALSE)
ranef(model)
model1 <- lm(Reaction ~ Days (1|Days))
anova(model, model1)
model1 <- lm(Reaction ~ Days + (1|Subject))
anova(model, model1)
model@Zt
model@Z
model1 <- lmer(Reaction ~ Days + (1|Subject))
anova(model, model1)
anova(model1, model2)
model2 <- lmer(Reaction ~ Days + (Days|Subject))
anova(model1, model2)
model1 <- lm(Reaction ~ Days)
anova(model, model1)
ranEf
ranEf$Subject[,2]
summary(slopes)
slopes <- ranEf$Subject[,2]
summary(slopes)
summary(model)
fixef(model)
fixef(model)[,2]
fixef(model)[2]
slopes <- ranEf$Subject[,2] + fixef(model)[2]
summary(slopes)
summary(model)
summary(slopes)
slopes
qqnorm(rstandard(model))
fitted.values(model)
qqnorm(fitted.values(model)-Reaction)
anova(model, model1)
str(anova(model, model1))
anova(model, model1)[[8]]
anova(model, model1)[[8]][2]
?qqnorm
qqnorm(fitted.values(model)-Reaction); qqline(fitted.values(model)-Reaction)
?qqnorm
qqnorm(fitted.values(model)-Reaction, head = "QQ plot for residuals"); qqline(fitted.values(model)-Reaction)
qqnorm(fitted.values(model)-Reaction, title = "QQ plot for residuals"); qqline(fitted.values(model)-Reaction)
qqnorm(fitted.values(model)-Reaction, main = "QQ plot for residuals"); qqline(fitted.values(model)-Reaction)
qqmath(ranEf, main = "QQ plot for random effects")
qqmath(ranEf)
spdata <- read.table("http://www.ats.ucla.edu/stat/r/faq/thick.csv", header = T, sep = ",")
head(spdata)
library(lme)
install.packages("lme")
library(lme4)
library(lattice)
library(PBImisc)
library(ggplot2)
install.packages("ggplot2")
install.packages("PBImisc")
library(lme4)
install.packages("lme4")
spdata <- read.table("http://www.ats.ucla.edu/stat/r/faq/thick.csv", header = T, sep = ",")
head(spdata)
install.packages("nlme")
install.packages("nlme")
library(nlme)
library(lattice)
library(PBImisc)
library(ggplot2)
head(spdata)
simpleLinearModel <- lm(tick ~ soil, data = spdata)
simpleLinearModel <- lm(thick ~ soil, data = spdata)
summary(simpleLinearModel)
qqplot(rstandard(simpleLinearModel))
qqnorm(rstandard(simpleLinearModel))
qqline(rstandard(simpleLinearModel))
xyplot(soil, thick, data = spdata)
attach(spdata)
xyplot(soil, thick)
head(spdata)
class(soil)
class(thick)
xyplot(soil, thick)
plot(soil, thick)
ggplot(soil, thick)
ggplot(spdata, aes(x = soil, y = thick)) +
geom_point(shape = 1) +
geom_smooth(method = lm,
se = FALSE)
summary(simpleLinearModel)$coef
install.packages(DT)
install.packages("DT")
library(DT)
datatable(iris)
data.frame(summary(simpleLinearModel)$coef) -> df
datatable(df)
install.packages("ztable")
ztable(df)
library(ztable)
ztable(df)
soil.model <- lme(fixed = thick ~ soil, data = spdata, random = ~ 1 | dummy, method = "ML")
summary(soil.model)
soil.gau <- update(soil.model, correlation = corGaus(1, form = ~ east + north), method = "ML")
summary(soil.gau)
round(summary(simpleLinearModel)$coef, 4)
summary(spdata)
head(spdata)
plot(Variogram(thick, dist(spdata[,2:3])),
xlab="Distance [km]", span=0.4)
plot(Variogram(thick, dist(spdata$east)),
xlab="Distance East-West [km]", span=0.4)
plot(Variogram(thick, dist(spdata[,2:3])),
xlab="Distance [km]", span=0.4)
soil.gau <- update(soil.model, correlation = corGaus(1, form = ~ east + north), method = "ML")
summary(soil.gau)
soil.gau$coef
plot(Variogram(thick, dist(spdata[,2:3])),
xlab="distance", span=0.4)
head(spdata)
install.packages("ade4")
library(ade4)
distSpatial <- dist(spdata[,2:3])
distThick <- dist(spdata[,4])
distThick[1:5, 1:5]
as.matrix(distThick)[1:5, 1:5]
as.matrix(distSpacial)[1:5, 1:5]
as.matrix(distSpatial)[1:5, 1:5]
mantel.rtest(distSpatial, distThic)k
mantel.rtest(distSpatial, distThick)
spacialModel <- update(soil.model, correlation = corGaus(1, form = ~ east + north), method = "ML")
summary(spacialModel)
head(model.matrix(spacialModel))
class(spacialModel)
anova(spacialModel, simpleLinearModel)
residuals <- rstandard(spacialModel)
residuals <- fitted.values(spacialModel) - thick
qqnorm(residuals)
qqline(residuals)
qqnorm(thick)
qqline(thick)
qqnorm(log(thick))
boxcox(thick ~ soil)
?boxcox
boxcox(thick ~ soil, lambda = seq(-2, 10, 0.1))
bc <- (thick^4 -1)/4
model <- lm(bc ~ soil)
qqnorm(rstandard(model))
qqline(rstandard(model))
lillieTest(rstandard(model))
lillie.test(rstandard(model))
library(agricolae)
library(nortest)
lillie.test(rstandard(model))
shapiro.test(rstandard(model))
shapiro.test(rstandard(simpleLinearModel))
shapiro.test(rstandard(spacialModel))
shapiro.test(fitted.values(spacialModel) - thick)
ranef(spacialModel)
rm(bc)
library(lme4)
library(nlme)
library(lattice)
library(PBImisc)
library(ggplot2)
library(ade4)
spdata <- read.table("http://www.ats.ucla.edu/stat/r/faq/thick.csv", header = T, sep = ",")
attach(spdata)
simpleLinearModel <- lm(thick ~ soil, data = spdata)
knitr::kable(round(summary(simpleLinearModel)$coef, 4))
ggplot(spdata, aes(x = soil, y = thick)) +
geom_point(shape = 1) +
geom_smooth(method = lm, se = FALSE) +
ggtitle("Soil - thick scatterplot")
plot(Variogram(thick, dist(spdata[,2:3])),
xlab="distance", span = 0.4)
distSpacial <- dist(spdata[,2:3])
distThick <- dist(spdata[,4])
mantel.rtest(distSpacial, distThick)
l
l
soil.model <- lme(fixed = thick ~ soil, data = spdata, random = ~ 1 | dummy, method = "ML")
summary(soil.model)
spacialModel <- update(soil.model, correlation = corGaus(1, form = ~ east + north), method = "ML")
summary(spacialModel)
soil.model <- lme(fixed = thick ~ soil, data = spdata, correlation = corGaus(1, form = ~ east + north), random = ~ 1 | dummy, method = "ML")
summary(soil.model)
mantel.rtest(distSpatial, distThick)
modelExp <- lme(thick ~ soil, data = spdata, correlation = corGaus(1, form = ~ east + north), random = ~ 1 | dummy, method = "ML")
summary(modelSpatial)
nullModel <- lme(fixed = thick ~ 1, data = spdata, random = ~ 1 | dummy)
head(spdata)
modelExp <- update(nullModel, correlation = corExp(1, form = ~ east + north), method = "ML")
nullModel <- lme(fixed = thick ~ 1, data = spdata, random = ~ 1 | dummy)
modelExp <- update(nullModel, correlation = corExp(1, form = ~ east + north), method = "ML")
modelGaus <- update(nullModel, correlation = corGaus(1, form = ~ east + north), method = "ML")
modelSpher <- update(nullModel, correlation = corSpher(1, form = ~ east + north), method = "ML")
modelLin <- update(nullModel, correlation = corSLin(1, form = ~ east + north), method = "ML")
modelRatio <- update(nullModel, correlation = corRatio(1, form = ~ east + north), method = "ML")
modelLin <- update(nullModel, correlation = corLin(1, form = ~ east + north), method = "ML")
modelRatio <- update(nullModel, correlation = corRatio(1, form = ~ east + north), method = "ML")
summary(modelLin)
nullModel <- lme(fixed = thick ~ soil ,data = spdata, random = ~ 1 | dummy)
knitr::kable(round(summary(simpleLinearModel)$coef, 4))
fixedModel <- lme(fixed = thick ~ soil ,data = spdata, random = ~ 1 | dummy)
knitr::kable(round(summary(fixedModel)$coef, 4))
(round(summary(fixedModel)$coef, 4)
)
summary(fixedModel)
summary(fixedModel)$coef
summary(fixedModel)
str(summary(fixedModel))
modelExp <- update(fixedModel, correlation = corExp(1, form = ~ east + north), method = "ML")
modelGaus <- update(fixedModel, correlation = corGaus(1, form = ~ east + north), method = "ML")
modelSpher <- update(fixedModel, correlation = corSpher(1, form = ~ east + north), method = "ML")
modelLin <- update(fixedModel, correlation = corLin(1, form = ~ east + north), method = "ML")
modelRatio <- update(fixedModel, correlation = corRatio(1, form = ~ east + north), method = "ML")
summary(modelSpatial)
AIC(modelExp)
ogLik(fixedModel)
logLik(fixedModel)
logLik <- c(logLik(fixedModel),logLik(modelExp),logLik(modelGaus),
logLik(modelSpher),logLik(modelLin),logLik(modelRatio))
logLik
names(logLik) <- c("noSpatial", "corExp", "corGaus". "corSphere", "corLin", "corRatio")
names(logLik) <- c("noSpatial", "corExp", "corGaus", "corSphere", "corLin", "corRatio")
logLik
max(logLik)
names(logLik) <- c("-", "corExp", "corGaus", "corSphere", "corLin", "corRatio")
logLik
summary(modelRatio)
summary(fixedModel)
library(agricolae)
library(lmtest)
resettest(fixedModel)
resettest(lm(thick~soil, data = spdata))
ggplot(spdata, aes(x = soil, y = thick)) +
geom_point(shape = 1) +
geom_smooth(method = lm, se = FALSE) +
ggtitle("Soil - thick scatterplot")
resettest(lm(log(thick)~soil, data = spdata))
modelExp
summary(modelExp)
summary(modeSpere)
summary(modeSper)
summary(modelSper)
summary(modelSpher)
logLik
summary(modelLin)
str(summary(modelLin))
summary(modelLin)$coef
str(summary(modelLin)$coef)
summary(modelLin)$statistics
str(summary(modelLin))
summary(modelLin)
summary(modelExp)
summary(modelLin)
rm(list = ls())
load("~/LinearAndMixedModels-Project2/dendriticSpines.rda")
table <- matrix(table(Study:mouse:treatment), 15, 3)
attach(dendriticSpines)
table <- matrix(table(Study:mouse:treatment), 15, 3)
colnames(table) <- levels(Study)
row.names(table) <- levels(mouse:treatment)
table
library(lme)
library(nlme)
fixedModelAnova <- aov(length ~ mouse * treatment)
library(car)
TukeyHSD(fixedModelAnova)
plot(length~factor(Animal):factor((Photo_ID_abs)))
plot(length~Animal)
plot(length~factor(Animal))
plot(length~Study:factor(Animal))
boxplot(length~Study:factor(Animal))
fixedModelAnova <- aov(length ~ mouse * treatment)
TukeyHSD(fixedModelAnova)
na.omit(TukeyHSD(fixedModelAnova))
fixedModelAnova <- aov(log(length) ~ mouse * treatment)
na.omit(TukeyHSD(fixedModelAnova))
plot(TukeyHSD(fixedModelAnova))
TukeyHSD(fixedModelAnova)
boxplot(log(length) ~ Animal)
boxplot(log(length) ~ mouse)
?TukeyHSD
library(agricolae)
plot(scheffe.test(log(length) ~ mouse * treatment))
plot(scheffe.test(fixedModelAnova), "mouse:treatment")
(scheffe.test(fixedModelAnova), "mouse:treatment")
scheffe.test(fixedModelAnova, "mouse:treatment")
scheffe.test(fixedModelAnova, "mouse:treatment", ploit = TRUE)
scheffe.test(fixedModelAnova, "mouse:treatment", console = TRUE)
scheffe.test(fixedModelAnova, "mouse", console = TRUE)
scheffe.test(fixedModelAnova, "treatment", console = TRUE)
scheffe.test(fixedModelAnova, "mouse:treatment", console = TRUE)
scheffe.test(fixedModelAnova, "mouse*treatment", console = TRUE)
dendriticSpines$mouse:treatment <- mouse:treatment
dendriticSpines$`mouse:treatment` <- mouse:treatment
scheffe.test(fixedModelAnova, "mouse:treatment", console = TRUE)
head(dendriticSpines)
attach(dendriticSpines)
scheffe.test(fixedModelAnova, "mouse:treatment", console = TRUE)
dendriticSpines$`mouseTreatment` <- mouse:treatment
scheffe.test(fixedModelAnova, "mouseTreatment", console = TRUE)
fixedModelAnova <- aov(log(length) ~ mouseRreatment)
fixedModelAnova <- aov(log(length) ~ mouseTreatment)
scheffe.test(fixedModelAnova, "mouseTreatment", console = TRUE)
fixedModelAnova <- aov(log(length) ~ mouseTreatment)
attach(dendriticSpines)
fixedModelAnova <- aov(log(length) ~ mouseTreatment)
scheffe.test(fixedModelAnova, "mouseTreatment", console = TRUE)
library(dplyr)
?filter
dendriticSpinesWT <- filter(dendriticSpines, mouse = "WT")
dendriticSpinesWT <- filter(dendriticSpines, mouse == "WT")
head(dendriticSpinesWT)
rm(dendriticSpines$mouseTreatment)
dendriticSpines <- dendriticSpines[,-8]
dendriticSpines <- dendriticSpines[,-8]
head(dendriticSpinesWT)
head(dendriticSpines)
dendriticSpinesWT <- filter(dendriticSpines, mouse == "WT")
dendriticSpinesTG <- filter(dendriticSpines, mouse == "TG")
dendriticSpinesKO <- filter(dendriticSpines, mouse == "KO")
rm(dendriticSpinesKO)
rm(ddendriticSpinesTG)
rm(dendriticSpinesTG)
rm(ddendriticSpinesWT)
rm(dendriticSpinesWT)
modelFullStudy <- lme(log(length) ~ mouse * treatment + (1|Study) + (1|Study:Animal) + (1|Animal:Study:Photo_ID_abs))
modelFullStudy <- lmer(log(length) ~ mouse * treatment + (1|Study) + (1|Study:Animal) + (1|Animal:Study:Photo_ID_abs))
library(lme4)
modelFullStudy <- lmer(log(length) ~ mouse * treatment + (1|Study) + (1|Study:Animal) + (1|Animal:Study:Photo_ID_abs))
modelFull <- lmer(log(length) ~ mouse * treatment + (1|Study:Animal) + (1|Animal:Study:Photo_ID_abs))
anova(modelFullStudy, modelFull)
dendriticSpines$dummy <- 1
head(dendriticSpines)
fixedModel <- lme(log(length) ~ mouse * treatment ,data = dendriticSpines, random = ~ 1 | dummy)
fixedModel <- lme(log(length) ~ mouse * treatment, data = dendriticSpines, random = ~ 1 | dummy)
spdata <- read.table("http://www.ats.ucla.edu/stat/r/faq/thick.csv", header = T, sep = ",")
head(spdata)
table(dummy)
table(dspdata$ummy)
table(spdata$ummy)
summary(spdata$ummy)
unique(spdata$ummy)
class(spdata)
unique(spdata$dummy)
fixedModel <- lme(fixed = thick ~ soil ,data = spdata, random = ~ 1 | dummy)
fixedModel <- lme(fixed = log(length) ~ mouse * treatment, data = dendriticSpines, random = ~ 1 | dummy)
fixedModel <- lme(fixed = log(length) ~ mouse * treatment, data = dendriticSpines, random = ~ 1 | dummy)
fixedModel <- lme(fixed = log(length) ~ mouse * treatment, data = dendriticSpines, random = ~ 1 | dummy, method = "ML")
dummy <- 1
fixedModel <- lme(fixed = log(length) ~ mouse * treatment, data = dendriticSpines, random = ~ 1 | dummy, method = "ML")
fixedModel <- lme(fixed = log(length) ~ mouse , data = dendriticSpines, random = ~ 1 | dummy, method = "ML")
fixedModel <- lme(fixed = log(length) ~ mouse * treatment - 1, data = dendriticSpines, random = ~ 1 | dummy, method = "ML")
fixedModel <- lme(fixed = log(length) ~ mouse + treatment, data = dendriticSpines, random = ~ 1 | dummy, method = "ML")
dendriticSpines$mouseTreatment <- mouse:treatment
fixedModel <- lme(fixed = log(length) ~ mouse + treatment + mouseTreatment, data = dendriticSpines, random = ~ 1 | dummy, method = "ML")
head(dendriticSpines)
fixedModel <- lme(fixed = log(length) ~ mouse + treatment, data = dendriticSpines, random = ~ 1 | dummy, method = "ML")
fixedModel <- lme(fixed = log(length) ~ mouse + treatment + mouseTreatment, data = dendriticSpines, random = ~ 1 | dummy, method = "ML")
fixedModel <- lme(fixed = log(length) ~ mouse + treatment, data = dendriticSpines, random = ~ 1 | dummy, method = "ML")
fixedModelInteraction <- lme(fixed = log(length) ~ mouseTreatment, data = dendriticSpines, random = ~ 1 | dummy, method = "ML")
fixedModelInteraction <- lme(fixed = log(length) ~ mouse + treatment + mouseTreatment, data = dendriticSpines, random = ~ 1 | dummy, method = "ML")
modelFullStudy <- lmer(log(length) ~ mouse * treatment + (1|Study) + (1|Study:Animal) + (1|Animal:Study:Photo_ID_abs))
fixedModelInteraction <- lme(fixed = log(length) ~ mouse + treatment + mouseTreatment, data = dendriticSpines, random = ~ 1 | dummy, method = "ML")
modelFullStudy <- lmer(log(length) ~ mouse * treatment + (1|Study) + (1|Study:Animal) + (1|Animal:Study:Photo_ID_abs))
fixedModelInteraction <- lme(fixed = log(length) ~ mouse + treatment + mouseTreatment, data = dendriticSpines, random = ~ 1 | dummy, method = "ML")
fixedModelInteraction <- lme(fixed = log(length) ~ mouse + treatment + mouseTreatment, data = dendriticSpines, random = ~ 1 | dummy, method = "ML")
dendriticSpines$studyAnimal <- Study:Animal
dendriticSpines$studyAnimal <- Study:factor(Animal)
dendriticSpines$studyAnimalPhoto <- Study:factor(Animal):factor(Photo_ID_abs)
class(Animal/Photo_ID_abs)
head(Animal/Photo_ID_abs)
head(1|Animal/Photo_ID_abs)
class(1|Animal/Photo_ID_abs)
1|0
model1 <- lmer(log(length) ~ mouse*treatment + (1|Animal/Photo_ID_abs), data=dataset, REML=FALSE)
model1 <- lmer(log(length) ~ mouse*treatment + (1|Animal/Photo_ID_abs), REML=FALSE)
head(model.matrix(model1))
summary(model1)
summary(aov(log(length)~mouse*treatment+(1|Animal/Photo_ID_abs))
)
summary(aov(log(length)~mouse*treatment+(1|Animal/Photo_ID_abs)))
aov(log(length)~mouse*treatment+(1|Animal/Photo_ID_abs))
fixedModelInteraction <- lme(fixed = log(length) ~ mouse + treatment + mouseTreatment, data = dendriticSpines, random = ~ 1 | dummy, method = "ML")
modelFullStudy <- lmer(log(length) ~ mouse * treatment + (1|Study) + (1|Study:Animal) + (1|Animal:Study:Photo_ID_abs))
fixedModel <- lm(log(length) ~ mouse + treatment)
fixedModelInteraction <- lm(log(length) ~ mouse * treatment)
anova(fixedModel, fixedModelInteraction)
summary(aov(log(length)~mouse*treatment+(1|Animal/Photo_ID_abs)))
summary(aov(log(length)~mouse*treatment)
)
model.matrix(aov(log(length)~mouse*treatment)))
model.matrix(aov(log(length)~mouse*treatment))
head(model.matrix(aov(log(length)~mouse*treatment)))
head(model.matrix(aov(log(length)~mouse*treatment) + (1|Animal/Photo_ID_abs)))
head(model.matrix(aov(log(length)~mouse*treatment + (1|Animal/Photo_ID_abs)))
)
lmeFullModel = lme(log(length) ~ mouse * treatment, data = dendriticSpines, random = ~ 1|Animal:Study:Photo_ID_abs)
lmeFullModel = lme(log(length) ~ mouse * treatment, data = dendriticSpines, random = ~ 1|Animal)
install.packages("lmerTest")
library(lmerTest)
modelFull <- lmer(log(length) ~ mouse * treatment + (1|Study:Animal) + (1|Animal:Study:Photo_ID_abs))
anova(modelFull)
summary(anova(modelFull))
str(anova(modelFull))
anova(modelFull)
s <- plot(modelFull)
s <- step(modelFull)
plot(s)
s
plot(s[[1]])
str(s)
plot(s[[1]])
plot(s[[2]])
plot(s[[3]])
plot(s[[4]])
plot(s)
author: Michal Frej, Karolina Gajewska, Agnieszka Sitko, Marcin Wojno
$$ \log(length)_i = X \cdot \beta + Z \cdot u + \epsilon$$
Slide With Code
geoflip(plot(s))
class(plot(s))
plot(s) + coord_flip()
library(ggplot2)
plot(s) + coord_flip()
library(lmerTest)
setwd("/Users/Marcin/Documents/R/modelemieszaneiliniowe/LinearAndMixedModels-Project2")
load("~/LinearAndMixedModels-Project2/dendriticSpines.rda")
library(lme4)
library(lmerTest)
load("~/LinearAndMixedModels-Project2/dendriticSpines.rda")
fixedModel <- lm(log(length) ~ mouse + treatment, dendriticSpines)
fixedModelInteraction <- update(fixedModel, . ~ . + mouse * treatment)
anova(fixedModel, fixedModelInteraction)
mixedModelStudy <- lmer(log(length) ~ mouse * treatment + (1|Study), dendriticSpines)
mixedModelStudyAnimal <- lmer(log(length) ~ mouse * treatment + (1|Study/Animal), dendriticSpines)
anova(mixedModelStudy, mixedModelStudyAnimal)
mixedModelStudyAnimalPhoto <- lmer(log(length) ~ mouse * treatment + (1|Study/Animal/Photo_ID_abs), dendriticSpines)
anova(mixedModelStudyAnimal, mixedModelStudyAnimalPhoto)
dendriticSpines$StudyAnimal <-paste0(dendriticSpines$Study, dendriticSpines$Animal)
mixedModelAnimalPhoto <- lmer(log(length) ~ mouse * treatment + (1|StudyAnimal/Photo_ID_abs), dendriticSpines)
anova(mixedModelAnimalPhoto, mixedModelStudyAnimalPhoto)
mixedModelPhoto <- lmer(log(length) ~ mouse * treatment + (1|Study:Animal:Photo_ID_abs), dendriticSpines)
anova(mixedModelPhoto, mixedModelAnimalPhoto)
modelFull <- lmer(log(length) ~ mouse * treatment + (1|Study:Animal) + (1|Animal:Study:Photo_ID_abs), dendriticSpines)
s <- step(modelFull)
plot(s)
modelFull <- lmer(log(length) ~ mouse * treatment + (1|Study:Animal) + (1|Animal:Study:Photo_ID_abs), dendriticSpines)
s <- step(modelFull)
plot(s)
library(lme4)
library(lmerTest)
library(igraph)
library(ggplot2)
library(lattice)
load("~/LinearAndMixedModels-Project2/dendriticSpines.rda")
setwd("~/LinearAndMixedModels-Project2")
attach(dendriticSpines)
modelFull <- lmer(log(length) ~ mouse * treatment + (1|Study:Animal) + (1|Animal:Study:Photo_ID_abs), dendriticSpines)
s <- step(modelFull)
plot(s)
s
summary(s)
anova(fullModel, ddf="lme4")
anova(modelFull, ddf="lme4")
modelFull
anova(fullModel)
library(lmerTest)
anova(fullModel)
anova(modelFull)
anova(modelFull, type = 1)
anova(modelFull, ddf = "Kenward-Roger")
anova(modelFull)
anova(modelFull)->m
TukeyHSD(m)
?plot
s
plot(s)
?step
s$anova.table
s$lsmeans.table
s$diffs.lsmeans.table
